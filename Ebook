from ebook import EBook

class Catalog:
    def __init__(self):
        self._ebooks = {}

    def add_ebook(self, ebook):
        self._ebooks[ebook.get_title()] = ebook

    def get_ebook(self, title):
        return self._ebooks.get(title)

    def list_ebooks(self):
        return list(self._ebooks.values())





from shopping_cart import ShoppingCart

class Customer:

    def __init__(self, name, contact_info, is_loyalty_member=False): #Customer who can add items to their cart and make purchases
        self._name = name
        self._contact_info = contact_info
        self._is_loyalty_member = is_loyalty_member
        self._cart = ShoppingCart()

    @property
    def name(self):
        return self._name

    @property
    def is_loyalty_member(self):
        return self._is_loyalty_member

    #Add an eBook to the shopping cart
    def add_to_cart(self, ebook, quantity=1):
        self._cart.add_item(ebook, quantity)

    #Retrieve the shopping cart
    def get_cart(self):
        return self._cart



class EBook:
    def __init__(self, title, author, publication_date, genre, price):
        self._title = title
        self._author = author
        self._publication_date = publication_date
        self._genre = genre
        self._price = price

    def get_title(self):
        return self._title

    def get_author(self):
        return self._author

    def get_publication_date(self):
        return self._publication_date

    def get_genre(self):
        return self._genre

    def get_price(self):
        return self._price

    def __str__(self):
        return f"{self.get_title()} by {self.get_author()}, Genre: {self.get_genre()}, Price: ${self.get_price():.2f}"




class Invoice:
    #Generates an invoice for the customer's order
    def __init__(self, order):
        self._order = order

    def generate_invoice(self):
        #Prints out an itemized invoice with discounts and VAT
        print("\nInvoice")
        print("-" * 20)
        for item in self._order.get_items().values():
            ebook = item["ebook"]
            quantity = item["quantity"]
            print(f"{ebook.get_title()} (x{quantity}): ${ebook.get_price() * quantity:.2f}")

        discount = self._order.calculate_discount()
        total_price = self._order.calculate_total()

        print(f"Discount: -${discount:.2f}")
        print(f"VAT (8%): ${total_price * 0.08:.2f}")
        print(f"Total: ${total_price - discount + (total_price * 0.08):.2f}")





class Order:
    def __init__(self, customer):
        self._customer = customer
        self._items = customer.get_cart().get_items()

    def calculate_total(self):
        total = sum(item["ebook"].get_price() * item["quantity"] for item in self._items.values())
        return total

    def calculate_discount(self):
        if self._customer.is_loyalty_member:
            return self.calculate_total() * 0.10  # 10% discount 
        return 0.0

    def get_items(self):
        return self._items




class ShoppingCart:
    def __init__(self):
        self._items = {}

    def add_item(self, ebook, quantity):
        title = ebook.get_title()  
        if title in self._items:
            self._items[title]['quantity'] += quantity
        else:
            self._items[title] = {'ebook': ebook, 'quantity': quantity}

    def get_items(self):
        return self._items





import time
from catalog import Catalog
from customer import Customer
from ebook import EBook
from order import Order
from invoice import Invoice

def splash_screen():
    print("Welcome to the Great E-Book Store!")
    time.sleep(1)

def display_catalog(catalog):
    print("\nAvailable eBooks:")
    for ebook in catalog.list_ebooks():
        print(f"Title: {ebook.get_title()}, Author: {ebook.get_author()}, Price: ${ebook.get_price():.2f}")

def main():
    splash_screen()
    
    # Sample eBooks
    catalog = Catalog()
    catalog.add_ebook(EBook("Python Programming", "John Doe", "2023", "Programming", 29.99))
    catalog.add_ebook(EBook("Data Science", "Jane Doe", "2023", "Science", 39.99))
    catalog.add_ebook(EBook("Machine Learning", "Alice Smith", "2023", "AI", 49.99))
    catalog.add_ebook(EBook("Web Development", "David Johnson", "2023", "Technology", 34.99))
    catalog.add_ebook(EBook("Artificial Intelligence Basics", "Emily Davis", "2023", "AI", 44.99))
    catalog.add_ebook(EBook("Game Development with Unity", "Ethan Martinez", "2023", "Game Development", 55.99))
    catalog.add_ebook(EBook("Digital Marketing Strategies", "Ava Harris", "2023", "Marketing", 29.99))
    catalog.add_ebook(EBook("Financial Analysis with Python", "Lucas Robinson", "2023", "Finance", 48.99))
    catalog.add_ebook(EBook("Ethical Hacking", "Mia Clark", "2023", "Security", 52.99))


    while True:
        
        customer_name = input("Enter customer name: ")
        contact_info = input("Enter contact information: ")
        is_loyalty_member = input("Are you a loyalty member (yes/no)? ").strip().lower() == 'yes'
        customer = Customer(customer_name, contact_info, is_loyalty_member)

        display_catalog(catalog)

        while True:
            title = input("\nEnter eBook title to add to cart (or 'done' to finish): ")
            if title.lower() == 'done':
                break
            ebook = catalog.get_ebook(title)
            if ebook:
                quantity = int(input("Enter quantity: "))
                customer.add_to_cart(ebook, quantity)
            else:
                print("eBook not found in catalog.")

        # Generate invoice
        order = Order(customer)
        invoice = Invoice(order)
        invoice.generate_invoice()

        continue_choice = input("Would you like to continue shopping? (yes/no): ").strip().lower()
        if continue_choice != 'yes':
            print("Thank you for visiting the Great E-Book Store!!")
            break

if __name__ == "__main__":
    main()
